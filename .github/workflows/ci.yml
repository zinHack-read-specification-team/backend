name: CI/CD Backend Pipeline

on:
  push:
    branches: [main]

env:
  IMAGE_NAME: ghcr.io/${{ secrets.GHCR_USERNAME }}/zinhack-backend:latest

jobs:
  build:
    name: Build & Push Image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME .

      - name: Push Docker image
        run: docker push $IMAGE_NAME

  test:
    name: Local Compose Test
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3

      - name: Log in to GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

      - name: Pull image
        run: docker pull $IMAGE_NAME

      - name: Set IMAGE_NAME in .env
        run: echo "IMAGE_NAME=$IMAGE_NAME" > .env

      - name: Compose Up
        run: docker compose up -d

      - name: Wait for backend
        run: sleep 5

      - name: Test /ping
        run: |
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:6611/api/v1/ping)
          echo "Status code: $STATUS"
          if [ "$STATUS" != "200" ]; then
            echo "Ping failed"
            docker compose logs app
            exit 1
          fi

      - name: Compose Down
        run: docker compose down

  deploy:
    name: Deploy to Prod Server
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: SSH and Deploy
        run: |
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} <<EOF
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin
            cd ~/zin_hack_backend || exit 1
            echo "IMAGE_NAME=$IMAGE_NAME" > .env
            docker compose pull
            docker compose down || true
            docker compose up -d
            sleep 3
            echo "--- Health Check ---"
            curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/api/v1/ping
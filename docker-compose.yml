version: "3.8"

services:
  app:
    image: ${IMAGE_NAME}
    container_name: zinhack_back
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
        SERVER_ADDRESS: "0.0.0.0:8080"
        SERVER_ENV: "prod"

        # PostgreSQL
        DB_HOST: db
        DB_PORT: "5432"
        DB_USER: postgres
        DB_PASS: yourpassword
        DB_NAME: mydatabase

        # Redis
        REDIS_HOST: redis
        REDIS_PORT: "6379"

        # MinIO (s3 совместимое хранилище)
        S3_ENDPOINT: "minio:9000"
        S3_ACCESS_KEY: minioadmin
        S3_SECRET_KEY: minioadmin
        S3_BUCKET: mybucket
        S3_USE_SSL: "false"
    ports:
      - "6611:8080"
    networks:
      - backend_network
    restart: always

  db:
    image: postgres:15
    container_name: zinhack_postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: mydatabase
    ports:
      - "6612:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    container_name: zinhack_redis_cache
    restart: always
    ports:
      - "6613:6379"
    networks:
      - backend_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  minio:
    image: minio/minio
    container_name: zin_hack_minio_storage
    restart: always
    command: server --console-address ":9001" /data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "6614:9000"
      - "6615:9001"
    volumes:
      - minio_data:/data
    networks:
      - backend_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/ready"]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  postgres_data:
  minio_data:

networks:
  backend_network:
    driver: bridge